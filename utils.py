from datetime import datetime
import re

from telegram.ext import ContextTypes

from beeline_api import BeelineNumber

BAD_SERVICES = ['P2PTOR_NO', 'INFO300GB', 'SPEED_512', 'PRIOR3', 'SPDKCH']
GOOD_SERVICES = {
'USSD_BAN': {'entityName': '–ó–∞–ø—Ä–µ—Ç USSD —Ö–≤–æ—Å—Ç–æ–≤; –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã –ø—Ä–∏ USSD –∑–∞–ø—Ä–æ—Å–∞—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ *102#', 'how_to': '067405541'},
'MBCSTOPE': {'entityName': '–û—Ç–∫–∞–∑ –æ—Ç –ú–ú–°-—Ä–∞—Å—Å—ã–ª–æ–∫', 'how_to': '06740451'},
'PSMSADOFF': {'entityName': '–û—Ç–∫–∞–∑ –æ—Ç —Å–º—Å-—Ä–∞—Å—Å—ã–ª–æ–∫', 'how_to': '067401231'},
'NO_PROMO': {'entityName': '–ó–∞–ø—Ä–µ—Ç –ø—Ä–æ–º–æ –∞–∫—Ü–∏–π', 'how_to': '06740431'},
'AUTOSP_BL': {'entityName': '–ó–∞–ø—Ä–µ—Ç –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ (–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–µ—Ä–µ–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –ê–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏)', 'how_to': '*115*230#'},
'CRMINTBAR': {'entityName': '–ó–∞–ø—Ä–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –≤ —Å–µ—Ç—è—Ö –¥—Ä. –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –†–§', 'how_to': '*110*9390#'},
'ROAMBAR_P': {'entityName': '–ó–∞–ø—Ä–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Ä–æ—É–º–∏–Ω–≥–∞', 'how_to': '*110*0991#'},
'CPA_SAS': {'entityName': '–û—Ç–¥–µ–ª—å–Ω—ã–π –ª–∏—Ü–µ–≤–æ–π —Å—á—ë—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã —É—Å–ª—É–≥ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ (–ø–ª–∞—Ç–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –±—É–¥—É—Ç —Ç—Ä–∞—Ç–∏—Ç—å –¥–µ–Ω–µ–≥)', 'how_to': 'https://beeline.ru/customers/products/mobile/services/cutdetails/CPA_SAS/'}
}

PLEASE_WAIT_MSG = '‚åõ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...'
AUTH_MSG = '–î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ \n' \
           'üì±<b>–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b> –∏  üîí<b>–ø–∞—Ä–æ–ª—å</b> —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.'

SELECT_ACC_REGEXP = r'–í—ã–±—Ä–∞—Ç—å (.+) \(\+7([\d*]{10})\)$'
AUTH_REGEXP = r'(\d{10}) (.+)$'

IS_DEMO_MODE = False


def replace_demo_ctn(ctn):
    if IS_DEMO_MODE:
        return '905*******'
    return ctn


def format_bytes(size, unit):
    # 2**10 = 1024
    power = 2**10
    n = 0
    if unit == 'KBYTE':
        n = 1
    power_labels = {0: '', 1: '–ö', 2: '–ú', 3: '–ì', 4: '–¢'}
    while size > power:
        size /= power
        n += 1
    #return size, power_labels[n] + '–±–∞–π—Ç'
    return f'{size:.1f} {power_labels[n] + "–ë"}'


def str_to_datetime(date_str, format='%Y-%m-%dT%H:%M:%S.%f'):
    # '2023-02-05T00:00:00.000Z'
    # '2023-07-17T00:00:00.000+0300'
    return datetime.strptime(date_str[:23], format)


def get_current_index(context: ContextTypes.DEFAULT_TYPE) -> BeelineNumber:
    return context.user_data['beeline_user'].current_number


def get_current_number(context: ContextTypes.DEFAULT_TYPE) -> BeelineNumber:
    index_number = get_current_index(context)
    return context.user_data['beeline_user'].numbers[index_number]


def update_current_number(context: ContextTypes.DEFAULT_TYPE, new_number: BeelineNumber):
    index_number = get_current_index(context)
    context.user_data['beeline_user'].numbers[index_number] = new_number


def call_func(context: ContextTypes.DEFAULT_TYPE, func, *arg):
    response, new_number = func(get_current_number(context), *arg)
    update_current_number(context, new_number)

    return response
